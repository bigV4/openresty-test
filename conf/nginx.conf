worker_processes  1;        #nginx worker 数量
error_log logs/error.log;   #指定错误日志文件路径
events {
    worker_connections 1024;
}

http {
    # 设置默认 lua 搜索路径，添加 lua 路径
    # 此处写相对路径时，对启动 nginx 的路径有要求，必须在 nginx 目录下启动，require 找不到
    # comm.param 绝对路径当然也没问题，但是不可移植，因此应使用变量 $prefix 或
    # ${prefix}，OR 会替换为 nginx 的 prefix path。

    # lua_package_path 'lua/?.lua;/blah/?.lua;;';
    lua_package_path '$prefix/lua/?.lua;/blah/?.lua;;';
    # 这里设置为 off，是为了避免每次修改之后都要重新 reload 的麻烦。
    # 在生产环境上务必确保 lua_code_cache 设置成 on。
    lua_code_cache off;
    server {
        #监听端口，若你的6699端口已经被占用，则需要修改
        listen 6699;
        location / {
            default_type text/html;
            root htdocs;
            index index.html index.htm;
        }

        location /hello {
            default_type text/html;
            content_by_lua_block {
            local args = ngx.req.get_uri_args()
            ngx.say("HelloWorld")
            for k, v in pairs(args) do
                ngx.say( k .. ":" .. v .."  ")
            end
            }
        }

        location ~ ^/api/([-_a-zA-Z0-9/]+) {
            # 准入阶段完成参数验证
            access_by_lua_file  lua/access_check.lua;

            #内容生成阶段
            content_by_lua_file lua/$1.lua;
        }
        
        location ~ ^/api2/([-_a-zA-Z0-9/]+) {
            #内容生成阶段
            content_by_lua_file lua/$1.lua;
        }
        
        location ~ ^/ajax/([-_a-zA-Z0-9/]+) {
            #内容生成阶段
            content_by_lua_file lua/$1.lua;
        }
    }
}
